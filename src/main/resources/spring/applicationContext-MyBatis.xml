<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans.xsd 
						http://www.springframework.org/schema/aop 
						http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 
						http://www.springframework.org/schema/tx 
						http://www.springframework.org/schema/tx/spring-tx-3.2.xsd ">

	<!-- 마이바티스 적용을 위한 코드 -->
	<!-- DataSource Configuration -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="core.log.jdbc.driver.OracleDriver" />
		<property name="url"
			value="jdbc:oracle:thin:@10.96.250.125:1731:LOCALDEV" />
		<property name="username" value="intern_test2" />
		<property name="password" value="intern_test2" />
		<property name="maxActive" value="3" />
		<property name="minIdle" value="0" />
		<property name="maxIdle" value="-1" />
		<property name="maxWait" value="5000" />
		<property name="poolPreparedStatements" value="true" />
		<property name="maxOpenPreparedStatements" value="100" />
		<property name="removeAbandoned" value="true" />
		<property name="removeAbandonedTimeout" value="60" />

	</bean>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations" value="classpath:sqlmap/mapper/**/*.xml" />
		<property name="configLocation" value="classpath:sqlmap/mybatis-config.xml" />
		<property name="transactionFactory">
			<bean
				class="org.mybatis.spring.transaction.SpringManagedTransactionFactory" />
		</property>
	</bean>

	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>
	<bean id="commonDAO" class="net.guesthouse.roi.dao.CommonDao">
		<property name="sqlSessionTemplate" ref="sqlSessionTemplate" />
	</bean>

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
 	<tx:annotation-driven transaction-manager="transactionManager"/>
 <!-- if do you want Annotaion  -->
 


<!-- if Method throw Exception, rollback! -->	
<!--  	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="insert*" rollback-for="Exception"/>
			<tx:method name="update*" rollback-for="Exception"/>
			<tx:method name="delete*" rollback-for="Exception"/>
			<tx:method name="select*" read-only="true"/>
		</tx:attributes>
	</tx:advice> -->
	<!-- if Method throw Exception, rollback! -->



	<tx:annotation-driven proxy-target-class="true" />

</beans>